let handler = async (m, { conn, usedPrefix }) => {
    const gangData = global.db.data.gang = global.db.data.gang || {};
    const gangRequests = global.db.data.gangRequests = global.db.data.gangRequests || {};
    const users = global.db.data.users;

    const user = users[m.sender];
    if (!user.gang) return m.reply('Non fai parte di nessuna gang.');

    const gangId = user.gang.id;
    const gangInfo = gangData[gangId];
    if (user.gang.role !== 'boss') return m.reply('Solo il boss pu√≤ invitare nuovi membri.');
    if (!m.mentionedJid || m.mentionedJid.length === 0) return m.reply('‚ÑπÔ∏è Per invitare un utente esegui `.invitogsng @user`');

    const mention = m.mentionedJid[0];
    if (users[mention]?.gang) return m.reply('Questo utente √® gi√† in una gang.');
    if (gangInfo.members.length >= 4) return m.reply('La tua gang ha gi√† il numero massimo di membri (4).');

    gangRequests[mention] = {
        gangId,
        timeout: setTimeout(() => {
            delete gangRequests[mention];
            conn.sendMessage(m.chat, {
                text: `‚è±Ô∏è L'invito per @${mention.split('@')[0]} √® scaduto.`,
                mentions: [mention]
            });
        }, 60 * 1000)
    };

    await conn.sendMessage(m.chat, {
        text: `üî´ *INVITO DI GANG*\n\n@${m.sender.split('@')[0]} ti invita nella gang *${gangInfo.emoji} ${gangInfo.name} ${gangInfo.emoji}*.\n‚è≥ Hai 60 secondi per accettare o rifiutare.`,
        mentions: [mention, m.sender],
        buttons: [
            { buttonId: `${usedPrefix}accetta`, buttonText: { displayText: '‚úÖ Accetta' }, type: 1 },
            { buttonId: `${usedPrefix}rifiuta`, buttonText: { displayText: '‚ùå Rifiuta' }, type: 1 }
        ],
        headerType: 1
    }, { quoted: m });
};

handler.help = ['invitogang @user'];
handler.tags = ['gang'];
handler.command = ['invitogang'];
export default handler; 